@model App.Web.Areas.Administration.Models.ArticleViewModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Article</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>


       

        <div class="form-group">


            @Html.LabelFor(model => model.Context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Context, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDeleted)
                        @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script src="https://cloud.tinymce.com/stable/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            height: 500,
            menubar: false,
            plugins: [
                'advlist autolink lists link image charmap print preview anchor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table contextmenu paste code'
            ],
            toolbar: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'],
            entity_encoding: 'named',
            valid_elements: 'a[href|target=_blank],strong/b,div[align],br,p',
            setup: function (editor) {
                editor.on('click', function (e) {
                    console.log('Editor was clicked');
                });
            }
        });

        //tinymce.init({
        //    mode: "specific_textareas",
        //    selector: 'textarea',
        //    //editor_selector: "TinyMCE",
        //    convert_urls: false,
        //    encoding: "xml",
        //    theme: "modern",
        //    plugins: [
        //        "advlist autolink lists link image charmap print preview hr anchor pagebreak",
        //        "searchreplace wordcount visualblocks visualchars code fullscreen",
        //        "insertdatetime media nonbreaking save table contextmenu directionality",
        //        "emoticons template paste textcolor moxiemanager"
        //    ],
        //    toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        //    // toolbar2: "print preview media | forecolor backcolor emoticons",
        //    image_advtab: true,
        //    setup: function (editor) {
        //        editor.on('SaveContent', function (e) {
        //            // console.log('SaveContent event', e);
        //            e.content = e.content.replace(/&#39/g, "&apos");
        //        });
        //    }
        //});
    </script>
}
